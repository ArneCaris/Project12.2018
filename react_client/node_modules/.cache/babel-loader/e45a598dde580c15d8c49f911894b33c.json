{"ast":null,"code":"import _classCallCheck from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\src\\\\Test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport OptionModal from './Components/OptionModal';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\nimport { Route, Link } from 'react-router-dom';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Wholepost from './Components/Wholepost';\nimport NavigationButton from './Components/NavigationButton';\nimport RemoveButton from './Components/RemoveButton';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this, props));\n\n    _this.handleRemove = function (ID) {\n      _this.setState({\n        posts: _this.state.posts.filter(function (Post) {\n          return Post.ID !== ID;\n        })\n      });\n    };\n\n    _this.state = {\n      posts: [],\n      ID: '',\n      Title: '',\n      Content: '',\n      LastEdit: '',\n      modal: false\n    };\n    _this.handleRemove = _this.handleRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleModal = _this.handleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (results) {\n        var posts = results.data;\n\n        _this2.setState({\n          posts: posts\n        });\n      });\n    }\n  }, {\n    key: \"handleModal\",\n    value: function handleModal() {\n      this.setState({\n        modal: !this.state.modal,\n        posts: '',\n        ID: '',\n        Title: '',\n        Content: '',\n        LastEdit: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"for-posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.posts.map(function (Post) {\n        return React.createElement(\"div\", {\n          className: \"postdiv\",\n          key: Post.ID,\n          onClick: _this3.handleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          key: Post.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, Post.Title)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, Post.Content), React.createElement(RemoveButton, Object.assign({}, Post, {\n          removePost: _this3.handleRemove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }))));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.handleModal,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        key: this.props.posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, Post.ID), React.createElement(ModalBody, {\n        key: Post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport default Test;","map":{"version":3,"sources":["C:\\ProjectWinterFall\\Project12.2018\\react_client\\src\\Test.js"],"names":["React","Component","axios","ReactDOM","OptionModal","Button","Modal","ModalHeader","ModalBody","ModalFooter","Badge","Route","Link","toast","ToastContainer","Wholepost","NavigationButton","RemoveButton","Test","props","handleRemove","ID","setState","posts","state","filter","Post","Title","Content","LastEdit","modal","bind","handleModal","get","then","results","data","map","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport OptionModal from './Components/OptionModal';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Wholepost from './Components/Wholepost';\r\nimport NavigationButton from './Components/NavigationButton';\r\n\r\nimport RemoveButton from './Components/RemoveButton';\r\n\r\nclass Test extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      ID: '',\r\n      Title: '',\r\n      Content: '',\r\n      LastEdit: '',\r\n      modal: false\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleModal = this.handleModal.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:3000/posts/public`).then(results => {\r\n      const posts = results.data;\r\n      this.setState({ posts });\r\n    });\r\n  }\r\n\r\n    handleRemove = ID => {\r\n    this.setState ({\r\n      posts: this.state.posts.filter( Post => Post.ID !== ID)\r\n    });\r\n  };\r\n\r\n  handleModal() {\r\n    this.setState({\r\n        modal: !this.state.modal,\r\n        posts: '',\r\n        ID: '',\r\n        Title: '',\r\n        Content: '',\r\n        LastEdit: '',\r\n    });\r\n}\r\n\r\n\r\nrender() {\r\n    return(\r\n      <div>\r\n        \t<div className=\"for-posts\">\r\n            {this.state.posts.map((Post) =>(\r\n              <div className=\"postdiv\" key={Post.ID} onClick={this.handleModal}>\r\n              <ul>\r\n                <li key={Post.ID}><b>{Post.Title}</b></li>\r\n                <li>{Post.Content}</li>\r\n                <RemoveButton {...Post} removePost={this.handleRemove} />\r\n              </ul>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div>\r\n\r\n          <Modal isOpen={this.state.modal} toggle={this.handleModal} className={this.props.className}>\r\n            <ModalHeader key={this.props.posts}>{Post.ID}</ModalHeader>\r\n            <ModalBody key={Post}>\r\n              \r\n            </ModalBody>\r\n          </Modal>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}