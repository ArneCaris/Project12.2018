{"ast":null,"code":"import _classCallCheck from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\src\\\\Components\\\\CommentsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentsList, _Component);\n\n  function CommentsList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentsList).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      comments: [],\n      ID: '',\n      UserID: '',\n      PostID: '',\n      Message: '',\n      LastEdit: ''\n    };\n    return _this;\n  }\n\n  _createClass(CommentsList, [{\n    key: \"updateState\",\n    value: function updateState() {\n      var _this2 = this;\n\n      var currPostId = sessionStorage.getItem(\"PostID\");\n      axios.get(\"http://localhost:3000/comments/\" + currPostId).then(function (results) {\n        var posts = results.data;\n        var ID = [];\n        var UserID = [];\n        var PostID = [];\n        var Message = [];\n        var LastEdit = [];\n\n        for (var x = 0; x < posts.length; x++) {\n          ID.push(posts[x].ID);\n          UserID.push(posts[x].UserID);\n          PostID.push(posts[x].PostID);\n          Message.push(posts[x].Message);\n          LastEdit.push(posts[x].LastEdit);\n        }\n\n        _this2.setState({\n          ID: ID,\n          UserID: UserID,\n          PostID: PostID,\n          Message: Message,\n          LastEdit: LastEdit\n        });\n      });\n    }\n  }, {\n    key: \"forlooptitle\",\n    value: function forlooptitle(idlist, search) {\n      var anotherarray = {};\n\n      for (var x = 0; x < this.state.posts.length; x++) {\n        if (idlist.includes(this.state.posts[x].ID)) {\n          anotherarray[this.state.posts[x].ID] = {\n            id: this.state.posts[x].ID,\n            title: this.state.posts[x].Title,\n            content: this.state.posts[x].Content\n          };\n\n          if (this.state.posts[x].ID == document.getElementById(search).id) {\n            var requestedTitle = anotherarray[this.state.posts[x].ID].title;\n            var requestedContent = anotherarray[this.state.posts[x].ID].content;\n            this.setState({\n              titletext: requestedTitle,\n              titlecontent: requestedContent\n            });\n\n            if (anotherarray[this.state.posts[x].ID].title.length > 20) {\n              console.log(anotherarray[this.state.posts[x].ID].title.length);\n            }\n\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"handleList\",\n    value: function handleList() {\n      var idlist = [];\n      var PostID = sessionStorage.getItem('PostID');\n\n      for (var x = 0; x < this.state.posts.length; x++) {\n        idlist.push(this.state.posts[x].ID);\n        this.setState({\n          modal: !this.state.modal\n        });\n      }\n\n      this.forlooptitle(idlist, PostID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var commentsList = this.state.comments.map(function (Comment) {\n        if (Post.Title.length > 40) {\n          var titlestring = Post.Title.substring(0, 40) + \"...\";\n        } else {\n          titlestring = Post.Title;\n        }\n\n        if (Post.Content.length > 40) {\n          var contentstring = Post.Content.substring(0, 40) + \"...\";\n        } else {\n          contentstring = Post.Content;\n        }\n\n        return React.createElement(\"div\", {\n          key: Post.Title,\n          className: \"for-posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"postdiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          onClick: function onClick() {\n            return _this3.handleModal(Post.ID);\n          },\n          id: Post.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"ID: \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, Post.ID)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, titlestring)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, contentstring)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(Moment, {\n          format: \"DD-MM-YYYY\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, Post.LastEdit)))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, commentsList);\n    }\n  }]);\n\n  return CommentsList;\n}(Component);\n\nexport default CommentsList;","map":{"version":3,"sources":["C:\\OAMK\\Projects\\Fall_Winter_2018\\Project12.2018\\react_client\\src\\Components\\CommentsList.js"],"names":["React","Component","axios","Moment","CommentsList","props","handleSubmit","bind","updateState","state","comments","ID","UserID","PostID","Message","LastEdit","currPostId","sessionStorage","getItem","get","then","results","posts","data","x","length","push","setState","idlist","search","anotherarray","includes","id","title","Title","content","Content","document","getElementById","requestedTitle","requestedContent","titletext","titlecontent","console","log","modal","forlooptitle","commentsList","map","Comment","Post","titlestring","substring","contentstring","handleModal"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAGMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,sFAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,EAAE,EAAE,EAFK;AAGTC,MAAAA,MAAM,EAAE,EAHC;AAITC,MAAAA,MAAM,EAAE,EAJC;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAJc;AAYjB;;;;kCAEa;AAAA;;AAEV,UAAMC,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAnB;AAEAhB,MAAAA,KAAK,CAACiB,GAAN,CAAU,oCAAkCH,UAA5C,EAAwDI,IAAxD,CAA6D,UAAAC,OAAO,EAAI;AACtE,YAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACA,YAAMZ,EAAE,GAAG,EAAX;AACA,YAAMC,MAAM,GAAG,EAAf;AACA,YAAMC,MAAM,GAAG,EAAf;AACA,YAAMC,OAAO,GAAG,EAAhB;AACA,YAAMC,QAAQ,GAAG,EAAjB;;AACA,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCb,UAAAA,EAAE,CAACe,IAAH,CAAQJ,KAAK,CAACE,CAAD,CAAL,CAASb,EAAjB;AACAC,UAAAA,MAAM,CAACc,IAAP,CAAYJ,KAAK,CAACE,CAAD,CAAL,CAASZ,MAArB;AACAC,UAAAA,MAAM,CAACa,IAAP,CAAYJ,KAAK,CAACE,CAAD,CAAL,CAASX,MAArB;AACAC,UAAAA,OAAO,CAACY,IAAR,CAAaJ,KAAK,CAACE,CAAD,CAAL,CAASV,OAAtB;AACAC,UAAAA,QAAQ,CAACW,IAAT,CAAcJ,KAAK,CAACE,CAAD,CAAL,CAAST,QAAvB;AACD;;AACD,QAAA,MAAI,CAACY,QAAL,CAAc;AACZhB,UAAAA,EAAE,EAAFA,EADY;AAEZC,UAAAA,MAAM,EAANA,MAFY;AAGZC,UAAAA,MAAM,EAANA,MAHY;AAIZC,UAAAA,OAAO,EAAPA,OAJY;AAKZC,UAAAA,QAAQ,EAARA;AALY,SAAd;AAOD,OArBD;AAsBD;;;iCAEaa,M,EAAQC,M,EAAQ;AAC1B,UAAIC,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWa,KAAX,CAAiBG,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,YAAII,MAAM,CAACG,QAAP,CAAgB,KAAKtB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAApC,CAAJ,EAA6C;AAC3CmB,UAAAA,YAAY,CAAC,KAAKrB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAArB,CAAZ,GAAsC;AAACqB,YAAAA,EAAE,EAAE,KAAKvB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAAzB;AAA6BsB,YAAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBU,KAAxD;AAA+DC,YAAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBY;AAA5F,WAAtC;;AAGA,cAAI,KAAK3B,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAApB,IAA0B0B,QAAQ,CAACC,cAAT,CAAwBT,MAAxB,EAAgCG,EAA9D,EAAmE;AACjE,gBAAIO,cAAc,GAAGT,YAAY,CAAC,KAAKrB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAArB,CAAZ,CAAqCsB,KAA1D;AACA,gBAAIO,gBAAgB,GAAGV,YAAY,CAAC,KAAKrB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAArB,CAAZ,CAAqCwB,OAA5D;AACA,iBAAKR,QAAL,CAAc;AACZc,cAAAA,SAAS,EAAEF,cADC;AAEZG,cAAAA,YAAY,EAAEF;AAFF,aAAd;;AAIA,gBAAIV,YAAY,CAAC,KAAKrB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAArB,CAAZ,CAAqCsB,KAArC,CAA2CR,MAA3C,GAAoD,EAAxD,EAA4D;AAC1DkB,cAAAA,OAAO,CAACC,GAAR,CAAYd,YAAY,CAAC,KAAKrB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAArB,CAAZ,CAAqCsB,KAArC,CAA2CR,MAAvD;AAED;;AACD;AAED;AACF,SAlBD,MAmBK;AACH;AACD;AAEJ;AACJ;;;iCAEa;AACZ,UAAIG,MAAM,GAAG,EAAb;AACA,UAAMf,MAAM,GAAGI,cAAc,CAACC,OAAf,CAAwB,QAAxB,CAAf;;AAEA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWa,KAAX,CAAiBG,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAEhDI,QAAAA,MAAM,CAACF,IAAP,CAAY,KAAKjB,KAAL,CAAWa,KAAX,CAAiBE,CAAjB,EAAoBb,EAAhC;AAEA,aAAKgB,QAAL,CAAc;AACZkB,UAAAA,KAAK,EAAE,CAAC,KAAKpC,KAAL,CAAWoC;AADP,SAAd;AAGD;;AAED,WAAKC,YAAL,CAAkBlB,MAAlB,EAA0Bf,MAA1B;AACH;;;6BAGQ;AAAA;;AACL,UAAIkC,YAAY,GAAG,KAAKtC,KAAL,CAAWC,QAAX,CAAoBsC,GAApB,CAA0B,UAAAC,OAAO,EAAI;AACpD,YAAIC,IAAI,CAAChB,KAAL,CAAWT,MAAX,GAAoB,EAAxB,EAA4B;AACxB,cAAI0B,WAAW,GAAGD,IAAI,CAAChB,KAAL,CAAWkB,SAAX,CAAqB,CAArB,EAAwB,EAAxB,IAA8B,KAAhD;AACH,SAFD,MAGK;AACDD,UAAAA,WAAW,GAAGD,IAAI,CAAChB,KAAnB;AACH;;AACD,YAAIgB,IAAI,CAACd,OAAL,CAAaX,MAAb,GAAsB,EAA1B,EAA8B;AACxB,cAAI4B,aAAa,GAAGH,IAAI,CAACd,OAAL,CAAagB,SAAb,CAAuB,CAAvB,EAA0B,EAA1B,IAAgC,KAApD;AACD,SAFL,MAGS;AACDC,UAAAA,aAAa,GAAGH,IAAI,CAACd,OAArB;AACH;;AACD,eACI;AAAK,UAAA,GAAG,EAAEc,IAAI,CAAChB,KAAf;AAAsB,UAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACoB,WAAL,CAAiBJ,IAAI,CAACvC,EAAtB,CAAN;AAAA,WAAb;AAA8C,UAAA,EAAE,EAAEuC,IAAI,CAACvC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIuC,IAAI,CAACvC,EAAT,CAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKwC,WAAL,CAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIE,aAAJ,CAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,IAAI,CAACnC,QAAV,CADF,CALF,CADF,CADI,CADJ;AAcD,OA3BY,CAAnB;AA4BM,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCgC,YADD,CADF;AAKD;;;;EA3Hc9C,S;;AA8H3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass CommentsList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n        this.state = {\r\n            comments: [],\r\n            ID: '',\r\n            UserID: '',\r\n            PostID: '',\r\n            Message: '',\r\n            LastEdit: ''\r\n        }; \r\n    }\r\n\r\n    updateState() {\r\n\r\n        const currPostId = sessionStorage.getItem(\"PostID\")\r\n\r\n        axios.get(`http://localhost:3000/comments/`+currPostId).then(results => {\r\n          const posts = results.data;\r\n          const ID = [];\r\n          const UserID = [];\r\n          const PostID = [];\r\n          const Message = [];\r\n          const LastEdit = [];\r\n          for (var x = 0; x < posts.length; x++) {\r\n            ID.push(posts[x].ID);\r\n            UserID.push(posts[x].UserID);\r\n            PostID.push(posts[x].PostID);\r\n            Message.push(posts[x].Message);\r\n            LastEdit.push(posts[x].LastEdit);\r\n          }\r\n          this.setState({ \r\n            ID,\r\n            UserID,\r\n            PostID,\r\n            Message,\r\n            LastEdit\r\n           });\r\n        });\r\n      }\r\n    \r\n      forlooptitle (idlist, search) {\r\n          var anotherarray = {};\r\n          for (var x = 0; x < this.state.posts.length; x++) {\r\n              if (idlist.includes(this.state.posts[x].ID)) {\r\n                anotherarray[this.state.posts[x].ID]= {id: this.state.posts[x].ID, title: this.state.posts[x].Title, content: this.state.posts[x].Content}\r\n    \r\n    \r\n                if (this.state.posts[x].ID == document.getElementById(search).id)  {\r\n                  var requestedTitle = anotherarray[this.state.posts[x].ID].title;\r\n                  var requestedContent = anotherarray[this.state.posts[x].ID].content;\r\n                  this.setState({\r\n                    titletext: requestedTitle,\r\n                    titlecontent: requestedContent\r\n                  });\r\n                  if (anotherarray[this.state.posts[x].ID].title.length > 20) {\r\n                    console.log(anotherarray[this.state.posts[x].ID].title.length)\r\n                    \r\n                  }\r\n                  break\r\n                  \r\n                }               \r\n              }\r\n              else {\r\n                break\r\n              }\r\n              \r\n          }  \r\n      }\r\n    \r\n      handleList () {\r\n        var idlist = [];\r\n        const PostID = sessionStorage.getItem( 'PostID' );\r\n    \r\n        for (var x = 0; x < this.state.posts.length; x++) {\r\n    \r\n          idlist.push(this.state.posts[x].ID);\r\n    \r\n          this.setState({\r\n            modal: !this.state.modal,\r\n          });  \r\n        }\r\n    \r\n        this.forlooptitle(idlist, PostID);\r\n    }\r\n    \r\n\r\n    render() {\r\n        let commentsList = this.state.comments.map ( Comment => {\r\n            if (Post.Title.length > 40) {\r\n                var titlestring = Post.Title.substring(0, 40) + \"...\"\r\n            }\r\n            else {\r\n                titlestring = Post.Title\r\n            }\r\n            if (Post.Content.length > 40) {\r\n                  var contentstring = Post.Content.substring(0, 40) + \"...\"\r\n                }\r\n                else {\r\n                    contentstring = Post.Content\r\n                }\r\n                return (\r\n                    <div key={Post.Title} className=\"for-posts\">\r\n                <div className=\"postdiv\">\r\n                  <ul onClick={() => this.handleModal(Post.ID)} id={Post.ID} >\r\n                    <li>ID: <i>{Post.ID}</i></li>\r\n                    <li><h3>{titlestring}</h3></li>\r\n                    <li><p>{contentstring}</p></li>\r\n                    <br/>\r\n                    <Moment format={\"DD-MM-YYYY\"}>\r\n                      <li>{Post.LastEdit}</li>\r\n                    </Moment>\r\n                  </ul>\r\n                </div>\r\n                </div>)\r\n              });\r\n              return (\r\n                <div>\r\n                {commentsList}\r\n              </div>\r\n              );\r\n            }\r\n        }\r\n        \r\nexport default CommentsList;"]},"metadata":{},"sourceType":"module"}