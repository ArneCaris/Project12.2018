{"ast":null,"code":"import _classCallCheck from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\src\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport axios from 'axios';\nimport \"./Login.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport swal from 'sweetalert2';\nexport var Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.getUsers = _this.getUsers.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEnter = _this.handleEnter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEvent = _this.handleEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      Users: []\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"getUsers\",\n    value: function getUsers() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/Users/\").then(function (res) {\n        var Users = res.data;\n\n        _this2.setState({\n          Users: Users\n        });\n\n        var loginU = document.getElementById('username').value;\n        var loginP = document.getElementById('password').value;\n\n        var usernames = _this2.state.Users.map(function (user) {\n          return user.username;\n        });\n\n        if (usernames.length != 0) {\n          for (var x = 0; x < usernames.length; x++) {\n            if (Users[x].username === loginU) {\n              if (Users[x].password === loginP) {\n                var CurrUser = {\n                  id: Users[x].ID,\n                  username: Users[x].username,\n                  isAuthenticated: true\n                };\n                sessionStorage.setItem('userID', JSON.stringify(CurrUser.id));\n                sessionStorage.setItem('userUsername', JSON.stringify(CurrUser.username));\n                sessionStorage.setItem('isAuthenticated', JSON.stringify(CurrUser.isAuthenticated));\n\n                var _toast = swal.mixin({\n                  toast: true,\n                  position: 'top-end',\n                  showConfirmButton: false,\n                  timer: 3000\n                });\n\n                _toast({\n                  type: 'success',\n                  title: 'Signed in successfully'\n                });\n\n                _this2.props.history.push('/');\n\n                break;\n              }\n            } else {\n              swal('Oopsie!', 'User with this username does not exist!', 'error');\n            }\n          }\n        } else {\n          swal('Oopsie!', 'User with this username does not exist!', 'error');\n        }\n      });\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter(event) {\n      if (event.key === 'Enter') {\n        this.handleEvent();\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent() {\n      if (document.getElementById(\"password\").value.length > 3) {\n        this.getUsers();\n      } else {\n        var _toast2 = swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n        });\n\n        _toast2({\n          type: 'error',\n          title: 'Password must be longer than 4 characters.'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        style: {\n          marginTop: '5%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"username\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Username\"), React.createElement(FormControl, {\n        autoFocus: true,\n        onKeyPress: this.handleEnter,\n        type: \"username\",\n        id: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"password\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Password\"), React.createElement(FormControl, {\n        minLength: \"4\",\n        maxLength: \"20\",\n        type: \"password\",\n        id: \"password\",\n        onKeyPress: this.handleEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Button, {\n        id: \"LoginBTN\",\n        block: true,\n        onClick: this.handleEvent,\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(NavLink, {\n        to: \"/signup\",\n        style: {\n          color: 'black',\n          border: '1px solid black',\n          padding: '6px',\n          borderRadius: '4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Sign-up Here\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);","map":{"version":3,"sources":["C:\\OAMK\\Projects\\Fall_Winter_2018\\Project12.2018\\react_client\\src\\Login.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","axios","ToastContainer","toast","NavLink","swal","Login","props","getUsers","bind","handleEnter","handleEvent","state","Users","get","then","res","data","setState","loginU","document","getElementById","value","loginP","usernames","map","user","username","length","x","password","CurrUser","id","ID","isAuthenticated","sessionStorage","setItem","JSON","stringify","mixin","position","showConfirmButton","timer","type","title","history","push","event","key","marginTop","color","border","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport \"./Login.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer ,toast } from 'react-toastify';\r\nimport { NavLink } from 'react-router-dom';\r\nimport swal from 'sweetalert2';\r\n\r\n\r\n\r\nexport class Login extends Component {\r\n    constructor(props) { \r\n        super(props);\r\n          this.getUsers = this.getUsers.bind(this);\r\n          this.handleEnter = this.handleEnter.bind(this);\r\n          this.handleEvent = this.handleEvent.bind(this);\r\n          this.state = {\r\n            Users: []\r\n          }; \r\n    \r\n    }\r\n\r\n    \r\n    getUsers() {\r\n        axios.get(`http://localhost:3000/Users/`).then(res => {\r\n            const Users = res.data;\r\n            this.setState({ Users }); \r\n            \r\n              var loginU = document.getElementById('username').value;\r\n              var loginP = document.getElementById('password').value;\r\n\r\n              const usernames = this.state.Users.map(user => (user.username));\r\n\r\n              if (usernames.length != 0){\r\n\r\n              for ( var x = 0; x < usernames.length; x++){\r\n                  if(Users[x].username === loginU)\r\n                  {\r\n                      if(Users[x].password === loginP)\r\n                      {       \r\n                          \r\n                          var CurrUser = {\r\n                            id: Users[x].ID,\r\n                            username: Users[x].username,\r\n                            isAuthenticated: true\r\n                        };\r\n                        \r\n                        sessionStorage.setItem( 'userID', JSON.stringify(CurrUser.id) );\r\n                        sessionStorage.setItem( 'userUsername', JSON.stringify(CurrUser.username) );\r\n                        sessionStorage.setItem( 'isAuthenticated', JSON.stringify(CurrUser.isAuthenticated) );\r\n\r\n                        const toast = swal.mixin({\r\n                            toast: true,\r\n                            position: 'top-end',\r\n                            showConfirmButton: false,\r\n                            timer: 3000\r\n                        });\r\n\r\n                          toast({\r\n                              type: 'success',\r\n                              title: 'Signed in successfully'\r\n                          });\r\n                        \r\n                        this.props.history.push('/');\r\n                        \r\n                        break;\r\n                        \r\n                    } \r\n                    \r\n                } else {\r\n                    swal ( 'Oopsie!',\r\n                            'User with this username does not exist!',\r\n                            'error')\r\n                }\r\n            }      \r\n        } else {\r\n            swal ( 'Oopsie!',\r\n                            'User with this username does not exist!',\r\n                            'error')\r\n        }\r\n    }\r\n\r\n        );\r\n    }\r\n    \r\n    handleEnter(event) {\r\n        if (event.key === 'Enter') {\r\n\r\n            this.handleEvent();\r\n        }\r\n    }\r\n\r\n    handleEvent() {\r\n        if(document.getElementById(\"password\").value.length > 3) {\r\n                \r\n            this.getUsers();\r\n\r\n        } else {\r\n            const toast = swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000\r\n            });\r\n\r\n            toast({\r\n                type: 'error',\r\n                title: 'Password must be longer than 4 characters.'\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"Login\" style={{marginTop: '5%'}}>\r\n            <ToastContainer/>\r\n            <form>\r\n            <FormGroup controlId=\"username\" bsSize=\"large\">\r\n                <ControlLabel>Username</ControlLabel>\r\n                <FormControl\r\n                autoFocus\r\n                onKeyPress={this.handleEnter}\r\n                type=\"username\" id=\"username\"\r\n                />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                minLength=\"4\"\r\n                maxLength=\"20\"\r\n                type=\"password\"\r\n                 id=\"password\"\r\n                onKeyPress={this.handleEnter}\r\n                />\r\n            </FormGroup>\r\n            <Button\r\n                id=\"LoginBTN\"\r\n                block\r\n                onClick={this.handleEvent}\r\n                bsSize=\"large\"\r\n                >\r\n                Login\r\n            </Button>\r\n            </form>\r\n                <br/>\r\n                <NavLink to=\"/signup\" style={{color: 'black', border: '1px solid black', padding: '6px', borderRadius: '4px'}}>Sign-up Here</NavLink>\r\n            <br/>\r\n        </div>\r\n    \r\n        ); \r\n              \r\n    }         \r\n}"]},"metadata":{},"sourceType":"module"}