{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _createChainedFunction = _interopRequireDefault(require(\"./utils/createChainedFunction\"));\n\nvar _CloseButton = _interopRequireDefault(require(\"./CloseButton\")); // TODO: `aria-label` should be `closeLabel`.\n\n\nvar propTypes = {\n  /**\r\n   * Provides an accessible label for the close\r\n   * button. It is used for Assistive Technology when the label text is not\r\n   * readable.\r\n   */\n  closeLabel: _propTypes.default.string,\n\n  /**\r\n   * Specify whether the Component should contain a close button\r\n   */\n  closeButton: _propTypes.default.bool,\n\n  /**\r\n   * A Callback fired when the close button is clicked. If used directly inside\r\n   * a Modal component, the onHide will automatically be propagated up to the\r\n   * parent Modal `onHide`.\r\n   */\n  onHide: _propTypes.default.func\n};\nvar defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nvar contextTypes = {\n  $bs_modal: _propTypes.default.shape({\n    onHide: _propTypes.default.func\n  })\n};\n\nvar ModalHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(ModalHeader, _React$Component);\n\n  function ModalHeader() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ModalHeader.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        closeLabel = _this$props.closeLabel,\n        closeButton = _this$props.closeButton,\n        onHide = _this$props.onHide,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"closeLabel\", \"closeButton\", \"onHide\", \"className\", \"children\"]);\n    var modal = this.context.$bs_modal;\n\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);\n    return _react.default.createElement(\"div\", (0, _extends2.default)({}, elementProps, {\n      className: (0, _classnames.default)(className, classes)\n    }), closeButton && _react.default.createElement(_CloseButton.default, {\n      label: closeLabel,\n      onClick: (0, _createChainedFunction.default)(modal && modal.onHide, onHide)\n    }), children);\n  };\n\n  return ModalHeader;\n}(_react.default.Component);\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nModalHeader.contextTypes = contextTypes;\n\nvar _default = (0, _bootstrapUtils.bsClass)('modal-header', ModalHeader);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}