{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\owner\\\\Desktop\\\\project10.18\\\\react_client\\\\src\\\\Test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\nimport { Route, Link } from 'react-router-dom';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Wholepost from './Components/Wholepost';\nimport NavigationButton from './Components/NavigationButton';\nimport CommentField from './Components/CommentField';\nimport PostModal from './Components/PostModal';\nimport RemoveButton from './Components/RemoveButton';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this, props));\n\n    _this.handleRemove = function (ID) {\n      _this.setState({\n        posts: _this.state.posts.filter(function (Post) {\n          return Post.ID != ID;\n        })\n      });\n    };\n\n    _this.state = {\n      posts: [],\n      ID: '',\n      Title: '',\n      Content: '',\n      LastEdit: '',\n      titletext: '',\n      modal: false\n    };\n    _this.handleRemove = _this.handleRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleModal = _this.handleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.forlooptitle = _this.forlooptitle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.forloopid = _this.forloopid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (results) {\n        var posts = results.data;\n        var ID = [];\n        var Title = [];\n        var Content = [];\n        var LastEdit = [];\n\n        for (var x = 0; x < posts.length; x++) {\n          ID.push(posts[x].ID);\n          Title.push(posts[x].Title);\n          Content.push(posts[x].Content);\n          LastEdit.push(posts[x].LastEdit);\n        }\n\n        _this2.setState({\n          posts: posts,\n          ID: ID,\n          Title: Title,\n          Content: Content,\n          LastEdit: LastEdit\n        });\n      });\n    }\n  }, {\n    key: \"forlooptitle\",\n    value: function forlooptitle(something) {\n      for (var x = 0; x < 50; x++) {\n        if (x in something) {\n          this.setState({\n            titletext: this.state.Title[x - 1]\n          });\n        }\n      }\n    }\n  }, {\n    key: \"forloopid\",\n    value: function forloopid() {\n      var idlist = [];\n\n      for (var x = 0; x < this.state.posts.length; x++) {\n        idlist.push(this.state.posts[x].ID);\n      }\n\n      this.forlooptitle(idlist);\n    }\n  }, {\n    key: \"handleModal\",\n    value: function handleModal() {\n      this.setState({\n        modal: !this.state.modal\n      });\n      this.forloopid();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _React$createElement;\n\n      var postsList = this.state.posts.map(function (Post) {\n        return React.createElement(\"div\", {\n          className: \"for-posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"postdiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          onClick: _this3.handleModal,\n          id: \"forloop\",\n          className: Post.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, Post.Title), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, Post.Content))));\n      });\n      var modaltitle = React.createElement(\"div\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.titletext);\n      var modalcontent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.Content[3]);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, postsList), React.createElement(Modal, (_React$createElement = {\n        key: this.props.ID,\n        isOpen: this.state.modal,\n        toggle: this.handleModal\n      }, _defineProperty(_React$createElement, \"key\", this.state.posts.ID), _defineProperty(_React$createElement, \"className\", \"modalpost\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, modaltitle), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, modalcontent), React.createElement(CommentField, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport default Test;","map":{"version":3,"sources":["C:\\Users\\owner\\Desktop\\project10.18\\react_client\\src\\Test.js"],"names":["React","Component","axios","ReactDOM","Button","Modal","ModalHeader","ModalBody","ModalFooter","Badge","Route","Link","toast","ToastContainer","Wholepost","NavigationButton","CommentField","PostModal","RemoveButton","Test","props","handleRemove","ID","setState","posts","state","filter","Post","Title","Content","LastEdit","titletext","modal","bind","handleModal","forlooptitle","forloopid","get","then","results","data","x","length","push","something","idlist","postsList","map","modaltitle","modalcontent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Wholepost from './Components/Wholepost';\r\nimport NavigationButton from './Components/NavigationButton';\r\nimport CommentField from './Components/CommentField';\r\nimport PostModal from './Components/PostModal';\r\nimport RemoveButton from './Components/RemoveButton';\r\n\r\nclass Test extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      ID: '',\r\n      Title: '',\r\n      Content: '',\r\n      LastEdit: '',\r\n      titletext: '',\r\n      modal: false\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleModal = this.handleModal.bind(this);\r\n    this.forlooptitle = this.forlooptitle.bind(this);\r\n    this.forloopid = this.forloopid.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:3000/posts/public`).then(results => {\r\n      const posts = results.data;\r\n      const ID = [];\r\n      const Title = [];\r\n      const Content = [];\r\n      const LastEdit = [];\r\n      for (var x = 0; x < posts.length; x++) {\r\n        ID.push(posts[x].ID);\r\n        Title.push(posts[x].Title);\r\n        Content.push(posts[x].Content);\r\n        LastEdit.push(posts[x].LastEdit)\r\n      }\r\n      this.setState({ \r\n        posts,\r\n        ID,\r\n        Title,\r\n        Content,\r\n        LastEdit\r\n       });\r\n    });\r\n  }\r\n\r\n  forlooptitle (something) {\r\n      \r\n      for (var x = 0; x < 50; x++) {\r\n          if (x in something) {\r\n            this.setState({\r\n              titletext: this.state.Title[x-1]\r\n            })\r\n            \r\n          }  \r\n        }\r\n        \r\n  }\r\n\r\n   forloopid () {\r\n    var idlist = []\r\n    for (var x = 0; x < this.state.posts.length; x++) {\r\n\r\n      idlist.push(this.state.posts[x].ID)\r\n\r\n   }\r\n   this.forlooptitle(idlist);\r\n }\r\n\r\n\r\n    handleRemove = ID => {\r\n    this.setState ({\r\n      posts: this.state.posts.filter( Post => Post.ID != ID)\r\n    });\r\n  };\r\n\r\n  handleModal() {\r\n\r\n    this.setState({\r\n        modal: !this.state.modal,\r\n\r\n    });\r\n    this.forloopid();\r\n}\r\n\r\n\r\nrender() {\r\n    let postsList = this.state.posts.map ( Post => {\r\n        return (\r\n        <div className=\"for-posts\">\r\n        <div className=\"postdiv\">\r\n          <ul>\r\n            <li onClick={this.handleModal} id=\"forloop\" className={Post.ID}>{Post.Title}</li>\r\n            <li>{Post.Content}</li>\r\n          </ul>\r\n        </div>\r\n        </div>)\r\n      });\r\n      var modaltitle =\r\n        <div id=\"title\">\r\n          \r\n          {this.state.titletext}\r\n        \r\n        </div>\r\n        ;\r\n      var modalcontent =\r\n        <div>\r\n          \r\n          {this.state.Content[3]}\r\n        \r\n        </div>\r\n        ;\r\n\r\n    return(\r\n      <div>\r\n        <div>\r\n          {postsList}\r\n        </div>\r\n        <Modal key={this.props.ID} isOpen={this.state.modal} toggle={this.handleModal} key={this.state.posts.ID} className=\"modalpost\">\r\n          \r\n            <ModalHeader>{modaltitle}</ModalHeader>\r\n            <ModalBody>\r\n              {modalcontent}\r\n            </ModalBody>\r\n            \r\n              <CommentField/>\r\n            \r\n          </Modal>\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}