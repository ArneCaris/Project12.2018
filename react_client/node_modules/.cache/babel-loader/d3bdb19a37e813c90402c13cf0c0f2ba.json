{"ast":null,"code":"import _classCallCheck from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\ProjectWinterFall\\\\Project12.2018\\\\react_client\\\\src\\\\Test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport OptionModal from './Components/OptionModal';\nimport { Badge } from 'reactstrap';\nimport { Route, Link } from 'react-router-dom';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Wholepost from './Components/Wholepost';\nimport NavigationButton from './Components/NavigationButton';\nimport RemoveButton from './Components/RemoveButton';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this, props));\n\n    _this.handleRemove = function (ID) {\n      _this.setState({\n        posts: _this.state.posts.filter(function (Post) {\n          return Post.ID !== ID;\n        })\n      });\n    };\n\n    _this.state = {\n      posts: [],\n      ID: ''\n    };\n    _this.handleRemove = _this.handleRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (results) {\n        var posts = results.data;\n\n        _this2.setState({\n          posts: posts\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var params = this.props.params;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"for-posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.posts.map(function (Post) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"postdiv\",\n          key: Post.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(RemoveButton, Object.assign({}, Post, {\n          removePost: _this3.handleRemove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          className: \"for-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"#\", Post.ID, \" Last edited: \", Post.LastEdit), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Link, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, Post.Title)), React.createElement(Badge, {\n          color: \"info\",\n          className: \"category-badge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, Post.Category)), React.createElement(\"p\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, Post.Content), React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(NavigationButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }))));\n      })));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport default Test;","map":{"version":3,"sources":["C:\\ProjectWinterFall\\Project12.2018\\react_client\\src\\Test.js"],"names":["React","Component","axios","ReactDOM","OptionModal","Badge","Route","Link","toast","ToastContainer","Wholepost","NavigationButton","RemoveButton","Test","props","handleRemove","ID","setState","posts","state","filter","Post","bind","get","then","results","data","params","map","LastEdit","Title","Category","Content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport OptionModal from './Components/OptionModal';\r\nimport { Badge } from 'reactstrap';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Wholepost from './Components/Wholepost';\r\nimport NavigationButton from './Components/NavigationButton';\r\n\r\nimport RemoveButton from './Components/RemoveButton';\r\n\r\nclass Test extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      ID: '',\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:3000/posts/public`).then(results => {\r\n      const posts = results.data;\r\n      this.setState({ posts });\r\n    });\r\n  }\r\n\r\n    handleRemove = ID => {\r\n    this.setState ({\r\n      posts: this.state.posts.filter( Post => Post.ID !== ID)\r\n    });\r\n  };\r\n\r\n\r\nrender() {\r\n  const { params } = this.props;\r\n    return(\r\n      <div>\r\n        <div className=\"for-posts\">\r\n            {this.state.posts.map(Post =>(\r\n            <ul>\r\n              <div className=\"postdiv\" key={Post.ID}>\r\n              <RemoveButton {...Post} removePost={this.handleRemove} />\r\n              <p className=\"for-id\">#{Post.ID} Last edited: {Post.LastEdit}</p>\r\n              <li>\r\n                <Link><h4>{Post.Title}</h4></Link><Badge color=\"info\" className=\"category-badge\">{Post.Category}</Badge>\r\n              </li>\r\n              <p className=\"text\">{Post.Content}</p>\r\n              <section>\r\n                <NavigationButton/>\r\n              </section>\r\n              </div>\r\n            </ul>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}