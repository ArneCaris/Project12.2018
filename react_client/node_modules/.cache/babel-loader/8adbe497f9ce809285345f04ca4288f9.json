{"ast":null,"code":"import _classCallCheck from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\src\\\\Components\\\\CommentsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentsList, _Component);\n\n  function CommentsList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentsList).call(this, props));\n    _this.state = {\n      comments: [],\n      ID: '',\n      UserID: '',\n      PostID: '',\n      Message: '',\n      LastEdit: ''\n    };\n    return _this;\n  }\n\n  _createClass(CommentsList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      var _this2 = this;\n\n      var currPostId = sessionStorage.getItem(\"PostID\");\n      axios.get(\"http://localhost:3000/comments/\" + currPostId).then(function (results) {\n        var comments = results.data;\n        var ID = [];\n        var UserID = [];\n        var PostID = [];\n        var Message = [];\n        var LastEdit = [];\n\n        for (var x = 0; x < comments.length; x++) {\n          ID.push(comments[x].ID);\n          UserID.push(comments[x].UserID);\n          PostID.push(comments[x].PostID);\n          Message.push(comments[x].Message);\n          LastEdit.push(comments[x].LastEdit);\n        }\n\n        _this2.setState({\n          comments: comments,\n          ID: ID,\n          UserID: UserID,\n          PostID: PostID,\n          Message: Message,\n          LastEdit: LastEdit\n        });\n      });\n      console.log(this.state);\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var commentsList = this.state.comments.map(function (comment) {\n        var commentUser = comment.UserID;\n        var Messagestring = comment.Message;\n        return React.createElement(\"div\", {\n          className: \"for-posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"commentdiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          id: comment.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"ID: \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, comment.ID)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, commentUser)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, Messagestring)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(Moment, {\n          format: \"DD-MM-YYYY\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, comment.LastEdit)))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, commentsList);\n    }\n  }]);\n\n  return CommentsList;\n}(Component);\n\nexport default CommentsList;","map":{"version":3,"sources":["C:\\OAMK\\Projects\\Fall_Winter_2018\\Project12.2018\\react_client\\src\\Components\\CommentsList.js"],"names":["React","Component","axios","Moment","CommentsList","props","state","comments","ID","UserID","PostID","Message","LastEdit","currPostId","sessionStorage","getItem","get","then","results","data","x","length","push","setState","console","log","commentsList","map","comment","commentUser","Messagestring"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass CommentsList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            comments: [],\r\n            ID: '',\r\n            UserID: '',\r\n            PostID: '',\r\n            Message: '',\r\n            LastEdit: ''\r\n        }; \r\n    }\r\n\r\n    shouldComponentUpdate(){\r\n        const currPostId = sessionStorage.getItem(\"PostID\")\r\n\r\n        axios.get(`http://localhost:3000/comments/`+currPostId).then(results => {\r\n          const comments = results.data;\r\n          const ID = [];\r\n          const UserID = [];\r\n          const PostID = [];\r\n          const Message = [];\r\n          const LastEdit = [];\r\n          for (var x = 0; x < comments.length; x++) {\r\n            ID.push(comments[x].ID);\r\n            UserID.push(comments[x].UserID);\r\n            PostID.push(comments[x].PostID);\r\n            Message.push(comments[x].Message);\r\n            LastEdit.push(comments[x].LastEdit);\r\n          }\r\n          this.setState({ \r\n            comments,\r\n            ID,\r\n            UserID,\r\n            PostID,\r\n            Message,\r\n            LastEdit\r\n           });\r\n        });\r\n        console.log(this.state);\r\n\r\n        return true;\r\n    }\r\n\r\n    \r\n     \r\n    \r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        let commentsList = this.state.comments.map ( comment => {\r\n        const commentUser = comment.UserID;\r\n        const Messagestring = comment.Message;\r\n            \r\n        \r\n        return (\r\n            <div className=\"for-posts\">\r\n            <div className=\"commentdiv\">\r\n                <ul id={comment.ID} >\r\n                <li>ID: <i>{comment.ID}</i></li>\r\n                <li><h3>{commentUser}</h3></li>\r\n                <li><p>{Messagestring}</p></li>\r\n                <br/>\r\n                <Moment format={\"DD-MM-YYYY\"}>\r\n                    <li>{comment.LastEdit}</li>\r\n                </Moment>\r\n                </ul>\r\n            </div>\r\n            </div>)\r\n            });\r\n        return (\r\n            <div>\r\n                {commentsList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n        \r\nexport default CommentsList;"]},"metadata":{},"sourceType":"module"}