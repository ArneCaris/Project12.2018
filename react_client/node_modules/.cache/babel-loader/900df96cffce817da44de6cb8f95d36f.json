{"ast":null,"code":"import _classCallCheck from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\src\\\\test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n\nvar test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(test, _Component);\n\n  function test() {\n    var _this;\n\n    _classCallCheck(this, test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(test).call(this));\n\n    _this.toggleOpen = function () {\n      return _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.handleClick = function (event) {\n      event.preventDefault();\n      var id = _this.state.ID;\n      var ID = _this.state.ID;\n      axios.delete('http://localhost:3000/posts/' + id, {\n        ID: ID\n      }).then(function (res) {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    _this.getPosts = _this.getPosts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      posts: [],\n      ID: ''\n    };\n    return _this;\n  }\n\n  _createClass(test, [{\n    key: \"getPosts\",\n    value: function getPosts() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (res) {\n        var posts = res.data;\n\n        _this2.setState({\n          posts: posts\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var menuClass = \"dropdown-menu\".concat(this.state.isOpen ? \"show\" : \" \");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.getPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"reload for posts\"), React.createElement(\"div\", {\n        className: \"for-posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.posts.map(function (Post) {\n        return React.createElement(\"div\", {\n          className: \"post-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, Post.Title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, Post.Content), React.createElement(\"div\", {\n          className: \"dropdown-post\",\n          onClick: _this3.toggleOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-secondary dropdown-toggle\",\n          type: \"button\",\n          id: \"dropdownMenuButton\",\n          \"data-toggle\": \"dropdown-post\",\n          \"aria-haspopup\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"...\"), React.createElement(\"div\", {\n          className: menuClass,\n          \"aria-labelledby\": \"dropdownMenuButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#nogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Update\"), React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#nogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Share\"), React.createElement(\"button\", {\n          className: \"dropdown-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Delete\"))));\n      })));\n    }\n  }]);\n\n  return test;\n}(Component);\n\nexport default test;","map":{"version":3,"sources":["C:\\Project127\\Project12.2018\\react_client\\src\\test.js"],"names":["React","Component","axios","ReactDOM","test","toggleOpen","setState","isOpen","state","onChange","e","target","name","value","handleClick","event","preventDefault","id","ID","delete","then","res","console","log","data","getPosts","bind","posts","get","menuClass","map","Post","Title","Content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass test extends Component {\r\n\r\n    toggleOpen = () => this.setState({ isOpen: !this.state.isOpen });\r\n    constructor() {\r\n        super();\r\n        this.getPosts = this.getPosts.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.state = {\r\n          posts: [],\r\n          ID: ''\r\n        };\r\n      }\r\n\r\n      onChange = e => {\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n      };\r\n      \r\n      handleClick = event => {\r\n        event.preventDefault();\r\n        const id = this.state.ID;\r\n        const { ID } = this.state;\r\n        \r\n        axios.delete('http://localhost:3000/posts/' + id, {ID})\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          });\r\n      };\r\n\r\n      getPosts() {\r\n        axios.get(`http://localhost:3000/posts/public`).then(res => {\r\n          const posts = res.data;\r\n          this.setState({ posts });\r\n        });\r\n      }\r\n\r\n    render() {\r\n        const menuClass = `dropdown-menu${this.state.isOpen ? \"show\" : \" \"}`;\r\n        return (\r\n          <div>\r\n          <button className=\"button\" onClick={this.getPosts}>\r\n            reload for posts\r\n          </button>\r\n            <div className=\"for-posts\">\r\n              {this.state.posts.map(Post =>(\r\n            <div className=\"post-div\">\r\n              <h4>{Post.Title}</h4>\r\n              <p>{Post.Content}</p>\r\n              <div className=\"dropdown-post\" onClick={this.toggleOpen}>\r\n                <button\r\n                    className=\"btn btn-secondary dropdown-toggle\" \r\n                    type=\"button\" \r\n                    id=\"dropdownMenuButton\" \r\n                    data-toggle=\"dropdown-post\" \r\n                    aria-haspopup=\"true\">\r\n                   ...\r\n                </button>\r\n                <div className={menuClass} aria-labelledby=\"dropdownMenuButton\">\r\n                    <a className=\"dropdown-item\" href=\"#nogo\">Update</a>\r\n                    <a className=\"dropdown-item\" href=\"#nogo\">Share</a>\r\n                    <button className=\"dropdown-item\">Delete</button>\r\n                </div>\r\n            </div>\r\n\r\n            </div>\r\n            ))}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default test;"]},"metadata":{},"sourceType":"module"}