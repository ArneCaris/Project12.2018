{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport BaseOverlay from 'react-overlays/lib/Overlay';\nimport elementType from 'prop-types-extra/lib/elementType';\nimport Fade from './Fade';\n\nvar propTypes = _extends({}, BaseOverlay.propTypes, {\n  /**\r\n   * Set the visibility of the Overlay\r\n   */\n  show: PropTypes.bool,\n\n  /**\r\n   * Specify whether the overlay should trigger onHide when the user clicks outside the overlay\r\n   */\n  rootClose: PropTypes.bool,\n\n  /**\r\n   * A callback invoked by the overlay when it wishes to be hidden. Required if\r\n   * `rootClose` is specified.\r\n   */\n  onHide: PropTypes.func,\n\n  /**\r\n   * Use animation\r\n   */\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n\n  /**\r\n   * Callback fired before the Overlay transitions in\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * Callback fired as the Overlay begins to transition in\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * Callback fired after the Overlay finishes transitioning in\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * Callback fired right before the Overlay transitions out\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * Callback fired as the Overlay begins to transition out\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * Callback fired after the Overlay finishes transitioning out\r\n   */\n  onExited: PropTypes.func,\n\n  /**\r\n   * Sets the direction of the Overlay.\r\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left'])\n});\n\nvar defaultProps = {\n  animation: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'right'\n};\n\nvar Overlay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Overlay, _React$Component);\n\n  function Overlay() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Overlay.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        animation = _this$props.animation,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"animation\", \"children\"]);\n\n    var transition = animation === true ? Fade : animation || null;\n    var child;\n\n    if (!transition) {\n      child = cloneElement(children, {\n        className: classNames(children.props.className, 'in')\n      });\n    } else {\n      child = children;\n    }\n\n    return React.createElement(BaseOverlay, _extends({}, props, {\n      transition: transition\n    }), child);\n  };\n\n  return Overlay;\n}(React.Component);\n\nOverlay.propTypes = propTypes;\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","map":null,"metadata":{},"sourceType":"module"}