{"ast":null,"code":"import _classCallCheck from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\src\\\\PrivatePosts.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport 'moment-timezone';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\nimport CommentField from './Components/CommentField';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nvar PrivatePosts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PrivatePosts, _Component);\n\n  function PrivatePosts(props) {\n    var _this;\n\n    _classCallCheck(this, PrivatePosts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PrivatePosts).call(this, props));\n    _this.state = {\n      posts: [],\n      ID: '',\n      Title: '',\n      Content: '',\n      LastEdit: '',\n      titletext: '',\n      titlecontent: '',\n      modal: false\n    };\n    _this.handleModal = _this.handleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.forlooptitle = _this.forlooptitle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PrivatePosts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var ide = sessionStorage.getItem('userID', JSON.stringify(ide));\n      axios.get(\"http://localhost:3000/posts/private/user/\" + ide).then(function (results) {\n        var posts = results.data;\n        var ID = [];\n        var Title = [];\n        var Content = [];\n        var LastEdit = [];\n\n        for (var x = 0; x < posts.length; x++) {\n          ID.push(posts[x].ID);\n          Title.push(posts[x].Title);\n          Content.push(posts[x].Content);\n          LastEdit.push(posts[x].LastEdit);\n        }\n\n        _this2.setState({\n          posts: posts,\n          ID: ID,\n          Title: Title,\n          Content: Content,\n          LastEdit: LastEdit\n        });\n      });\n    }\n  }, {\n    key: \"forlooptitle\",\n    value: function forlooptitle(idlist, search) {\n      var anotherarray = {};\n\n      for (var x = 0; x < this.state.posts.length; x++) {\n        if (idlist.includes(this.state.posts[x].ID)) {\n          anotherarray[this.state.posts[x].ID] = {\n            id: this.state.posts[x].ID,\n            title: this.state.posts[x].Title,\n            content: this.state.posts[x].Content\n          };\n\n          if (this.state.posts[x].ID == document.getElementById(search).id) {\n            var requestedTitle = anotherarray[this.state.posts[x].ID].title;\n            var requestedContent = anotherarray[this.state.posts[x].ID].content;\n            this.setState({\n              titletext: requestedTitle,\n              titlecontent: requestedContent\n            });\n\n            if (anotherarray[this.state.posts[x].ID].title.length > 20) {\n              console.log(anotherarray[this.state.posts[x].ID].title.length);\n            }\n\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"handleModal\",\n    value: function handleModal(search) {\n      var idlist = [];\n\n      for (var x = 0; x < this.state.posts.length; x++) {\n        idlist.push(this.state.posts[x].ID);\n        this.setState({\n          modal: !this.state.modal\n        });\n      }\n\n      this.forlooptitle(idlist, search);\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var postsList = this.state.posts.map(function (Post) {\n        if (Post.Title.length > 40) {\n          var titlestring = Post.Title.substring(0, 40) + \"...\";\n        } else {\n          titlestring = Post.Title;\n        }\n\n        if (Post.Content.length > 40) {\n          var contentstring = Post.Content.substring(0, 40) + \"...\";\n        } else {\n          contentstring = Post.Content;\n        }\n\n        return React.createElement(\"div\", {\n          key: Post.Title,\n          className: \"for-posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"postdiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          onClick: function onClick() {\n            return _this3.handleModal(Post.ID);\n          },\n          id: Post.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"ID: \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, Post.ID)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, titlestring)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, contentstring)), React.createElement(Link, {\n          to: \"/posts/category/\" + Post.Category.toLowerCase(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, Post.Category)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(Moment, {\n          format: \"DD-MM-YYYY\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, Post.LastEdit)))));\n      });\n      var modaltitle = React.createElement(\"div\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.titletext.substring(0, 50), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), this.state.titletext.substring(50, 100));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(UserMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), postsList), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, postsList), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        key: this.state.posts.ID,\n        className: \"modal-dialog modal-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, modaltitle), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.titlecontent.length > 40 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.titlecontent.substring(0, this.state.titlecontent.length * 0.25), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), this.state.titlecontent.substring(this.state.titlecontent.length * 0.25, this.state.titlecontent.length * 0.50), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), this.state.titlecontent.substring(this.state.titlecontent.length * 0.50, this.state.titlecontent.length * 0.75), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), this.state.titlecontent.substring(this.state.titlecontent.length * 0.75, this.state.titlecontent.length)) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.titlecontent)), React.createElement(CommentField, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }]);\n\n  return PrivatePosts;\n}(Component);\n\nexport default PrivatePosts;","map":{"version":3,"sources":["C:\\OAMK\\Projects\\Fall_Winter_2018\\Project12.2018\\react_client\\src\\PrivatePosts.js"],"names":["React","Component","axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","Badge","CommentField","Moment","Link","PrivatePosts","props","state","posts","ID","Title","Content","LastEdit","titletext","titlecontent","modal","handleModal","bind","forlooptitle","handleClose","ide","sessionStorage","getItem","JSON","stringify","get","then","results","data","x","length","push","setState","idlist","search","anotherarray","includes","id","title","content","document","getElementById","requestedTitle","requestedContent","console","log","postsList","map","Post","titlestring","substring","contentstring","Category","toLowerCase","modaltitle","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport 'moment-timezone';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\r\nimport CommentField from './Components/CommentField';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PrivatePosts extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      ID: '',\r\n      Title: '',\r\n      Content: '',\r\n      LastEdit: '',\r\n      titletext: '',\r\n      titlecontent: '',\r\n      modal: false\r\n    };\r\n    this.handleModal = this.handleModal.bind(this);\r\n    this.forlooptitle = this.forlooptitle.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ide = sessionStorage.getItem( 'userID', JSON.stringify(ide) );\r\n    axios.get(`http://localhost:3000/posts/private/user/` + ide).then(results => {\r\n      const posts = results.data;\r\n      const ID = [];\r\n      const Title = [];\r\n      const Content = [];\r\n      const LastEdit = [];\r\n      for (var x = 0; x < posts.length; x++) {\r\n        ID.push(posts[x].ID);\r\n        Title.push(posts[x].Title);\r\n        Content.push(posts[x].Content);\r\n        LastEdit.push(posts[x].LastEdit)\r\n      }\r\n      this.setState({ \r\n        posts,\r\n        ID,\r\n        Title,\r\n        Content,\r\n        LastEdit\r\n       });\r\n    });\r\n  }\r\n\r\n  forlooptitle (idlist, search) {\r\n      var anotherarray = {};\r\n      for (var x = 0; x < this.state.posts.length; x++) {\r\n          if (idlist.includes(this.state.posts[x].ID)) {\r\n            anotherarray[this.state.posts[x].ID]= {id: this.state.posts[x].ID, title: this.state.posts[x].Title, content: this.state.posts[x].Content}\r\n\r\n\r\n            if (this.state.posts[x].ID == document.getElementById(search).id)  {\r\n              var requestedTitle = anotherarray[this.state.posts[x].ID].title;\r\n              var requestedContent = anotherarray[this.state.posts[x].ID].content;\r\n              this.setState({\r\n                titletext: requestedTitle,\r\n                titlecontent: requestedContent\r\n              });\r\n              if (anotherarray[this.state.posts[x].ID].title.length > 20) {\r\n                console.log(anotherarray[this.state.posts[x].ID].title.length)\r\n                \r\n              }\r\n              break\r\n              \r\n            }               \r\n          }\r\n          else {\r\n            break\r\n          }\r\n          \r\n      }  \r\n  }\r\n\r\n  handleModal (search) {\r\n    var idlist = []\r\n    for (var x = 0; x < this.state.posts.length; x++) {\r\n\r\n      idlist.push(this.state.posts[x].ID);\r\n\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n      });  \r\n    }\r\n\r\n    this.forlooptitle(idlist, search);\r\n}\r\n\r\nhandleClose() {\r\n  this.setState({\r\n    modal: !this.state.modal,\r\n});\r\n}\r\n\r\nrender() {\r\n  let postsList = this.state.posts.map ( Post => {\r\n    if (Post.Title.length > 40) {\r\n      var titlestring = Post.Title.substring(0, 40) + \"...\"\r\n    }\r\n    else {\r\n      titlestring = Post.Title\r\n    }\r\n    if (Post.Content.length > 40) {\r\n      var contentstring = Post.Content.substring(0, 40) + \"...\"\r\n    }\r\n    else {\r\n      contentstring = Post.Content\r\n    }\r\n    return (\r\n    <div key={Post.Title} className=\"for-posts\">\r\n    <div className=\"postdiv\">\r\n      <ul onClick={() => this.handleModal(Post.ID)} id={Post.ID} >\r\n        <li>ID: <i>{Post.ID}</i></li>\r\n        <li><h3>{titlestring}</h3></li>\r\n        <li><p>{contentstring}</p></li>\r\n        <Link to={\"/posts/category/\" + (Post.Category).toLowerCase()}><Badge>{Post.Category}</Badge></Link>\r\n        <br/>\r\n        <Moment format={\"DD-MM-YYYY\"}>\r\n          <li>{Post.LastEdit}</li>\r\n        </Moment>\r\n      </ul>\r\n    </div>\r\n    </div>)\r\n  });\r\n      var modaltitle =\r\n        <div id=\"title\">\r\n          \r\n          {this.state.titletext.substring(0, 50)}\r\n          <br/>\r\n          {this.state.titletext.substring(50, 100)}\r\n        </div>\r\n        ;\r\n\r\n    return(\r\n      \r\n      <div>\r\n        <div>\r\n          <div style={{margin: '50px'}}>\r\n              <UserMenu/>\r\n          </div>\r\n            {postsList}\r\n        </div>\r\n\r\n        <div>\r\n          {postsList}\r\n        </div>\r\n        \r\n        <Modal isOpen={this.state.modal} key={this.state.posts.ID} className=\"modal-dialog modal-lg\">\r\n          \r\n            <ModalHeader>{modaltitle}</ModalHeader>\r\n            <ModalBody>\r\n              {this.state.titlecontent.length > 40\r\n              ?\r\n              <div>\r\n                {this.state.titlecontent.substring(0, this.state.titlecontent.length * 0.25 )}\r\n                <br/>\r\n                {this.state.titlecontent.substring(this.state.titlecontent.length * 0.25, this.state.titlecontent.length * 0.50)}\r\n                <br/>\r\n                {this.state.titlecontent.substring(this.state.titlecontent.length * 0.50, this.state.titlecontent.length * 0.75)}\r\n                <br/>\r\n                {this.state.titlecontent.substring(this.state.titlecontent.length * 0.75, this.state.titlecontent.length)}\r\n              </div>\r\n              :\r\n              <div>\r\n                {this.state.titlecontent}\r\n              </div>\r\n              }\r\n            </ModalBody>\r\n            \r\n              <CommentField/>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={this.handleClose}>Close</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default PrivatePosts;"]},"metadata":{},"sourceType":"module"}