{"ast":null,"code":"import _classCallCheck from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\src\\\\test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\nimport $ from 'jquery';\nimport Posts from './Posts';\nimport { timingSafeEqual } from 'crypto';\n\nvar test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(test, _Component);\n\n  function test() {\n    var _this;\n\n    _classCallCheck(this, test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(test).call(this));\n    _this.state = {\n      isOpen: false\n    };\n\n    _this.toggleOpen = function () {\n      return _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.getPosts = _this.getPosts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(test, [{\n    key: \"getPosts\",\n    value: function getPosts() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (res) {\n        var posts = res.data;\n\n        _this2.setState({\n          posts: posts,\n          initialLoad: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var menuClass = 'dropdown-menu${this.state.isOpen ? \"show\" : \"\"}';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.getPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"reload for posts\"), React.createElement(\"div\", {\n        className: \"for-posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.posts.map(function (Post) {\n        return React.createElement(\"div\", {\n          className: \"post-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, Post.Title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, Post.Content), React.createElement(\"div\", {\n          className: \"dropdown\",\n          onClick: _this3.toggleOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          id: \"dropdownMenuButton\",\n          \"data-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: menuClass,\n          \"aria-labelledby\": \"dropdownMenuButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#nogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Update\"), React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#nogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Share\"), React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#nogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Delete\"))));\n      })));\n    }\n  }]);\n\n  return test;\n}(Component);\n\nexport default test;","map":{"version":3,"sources":["C:\\Project127\\Project12.2018\\react_client\\src\\test.js"],"names":["React","Component","axios","DropdownButton","MenuItem","$","Posts","timingSafeEqual","test","state","isOpen","toggleOpen","setState","getPosts","bind","posts","get","then","res","data","initialLoad","menuClass","map","Post","Title","Content"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,QAAhC;;IAIMC,I;;;;;AAKF,kBAAc;AAAA;;AAAA;;AACV;AADU,UAJdC,KAIc,GAJN;AACJC,MAAAA,MAAM,EAAE;AADJ,KAIM;;AAAA,UADdC,UACc,GADD;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAAtB,OAAd,CAAN;AAAA,KACC;;AAEV,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKL,KAAL,GAAa;AACXM,MAAAA,KAAK,EAAE;AADI,KAAb;AAHU;AAMX;;;;+BACU;AAAA;;AACTb,MAAAA,KAAK,CAACc,GAAN,uCAAgDC,IAAhD,CAAqD,UAAAC,GAAG,EAAI;AAC1D,YAAMH,KAAK,GAAGG,GAAG,CAACC,IAAlB;;AACA,QAAA,MAAI,CAACP,QAAL,CAAc;AAAEG,UAAAA,KAAK,EAALA,KAAF;AAASK,UAAAA,WAAW,EAAE;AAAtB,SAAd;AACD,OAHD;AAID;;;6BACM;AAAA;;AACL,UAAMC,SAAS,GAAG,iDAAlB;AACA,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKR,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAKA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,CAAWM,KAAX,CAAiBO,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAC5B;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,OAAT,CAFF,EAGE;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,OAAO,EAAE,MAAI,CAACd,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,EAAE,EAAC,oBAHP;AAII,yBAAY,UAJhB;AAKI,2BAAc,MALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EASE;AAAK,UAAA,SAAS,EAAEU,SAAhB;AAA2B,6BAAgB,oBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,eAAb;AAA6B,UAAA,IAAI,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAG,UAAA,SAAS,EAAC,eAAb;AAA6B,UAAA,IAAI,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAG,UAAA,SAAS,EAAC,eAAb;AAA6B,UAAA,IAAI,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CATF,CAHF,CAD4B;AAAA,OAAzB,CADH,CALA,CAFJ;AAgCH;;;;EApDcpB,S;;AAuDnB,eAAeO,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\r\nimport $ from 'jquery'; \r\nimport Posts from './Posts';\r\nimport { timingSafeEqual } from 'crypto';\r\n\r\n\r\n\r\nclass test extends Component {\r\n    state = {\r\n        isOpen: false\r\n      };\r\n    toggleOpen = () => this.setState({ isOpen: !this.state.isOpen });\r\n    constructor() {\r\n        super();\r\n        this.getPosts = this.getPosts.bind(this);\r\n        this.state = {\r\n          posts: []\r\n        };\r\n      }\r\n      getPosts() {\r\n        axios.get(`http://localhost:3000/posts/public`).then(res => {\r\n          const posts = res.data;\r\n          this.setState({ posts, initialLoad: true });\r\n        });\r\n      }\r\n    render() {\r\n        const menuClass = 'dropdown-menu${this.state.isOpen ? \"show\" : \"\"}';\r\n        return (\r\n\r\n            <div>\r\n            <button className=\"button\" onClick={this.getPosts}>\r\n                reload for posts\r\n            </button>\r\n            \r\n            <div className=\"for-posts\">\r\n              {this.state.posts.map(Post =>(\r\n            <div className=\"post-div\">\r\n              <h4>{Post.Title}</h4>\r\n              <p>{Post.Content}</p>\r\n              <div className=\"dropdown\" onClick={this.toggleOpen}>\r\n                <button \r\n                    \r\n                    type=\"button\" \r\n                    id=\"dropdownMenuButton\" \r\n                    data-toggle=\"dropdown\" \r\n                    aria-haspopup=\"true\">\r\n                   \r\n                </button>\r\n                <div className={menuClass} aria-labelledby=\"dropdownMenuButton\">\r\n                    <a className=\"dropdown-item\" href=\"#nogo\">Update</a>\r\n                    <a className=\"dropdown-item\" href=\"#nogo\">Share</a>\r\n                    <a className=\"dropdown-item\" href=\"#nogo\">Delete</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            ))}\r\n            </div>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default test;"]},"metadata":{},"sourceType":"module"}