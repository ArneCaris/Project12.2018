{"ast":null,"code":"import _classCallCheck from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\src\\\\test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport { Modal } from 'react-bootstrap';\nimport { ModalHeader } from 'react-bootstrap';\nimport { ModalFooter } from 'react-bootstrap';\nimport { ModalBody } from 'react-bootstrap';\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Tooltip } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Popover } from 'react-bootstrap';\n\nvar test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(test, _Component);\n\n  function test(props, context) {\n    var _this;\n\n    _classCallCheck(this, test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(test).call(this, props, context));\n\n    _this.toggleOpen = function () {\n      return _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.getPosts = _this.getPosts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      posts: [],\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(test, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"getPosts\",\n    value: function getPosts() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (res) {\n        var posts = res.data;\n\n        _this2.setState({\n          posts: posts\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var popover = React.createElement(Popover, {\n        id: \"modal-popover\",\n        title: \"popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"very popover. such engagement\");\n      var tooltip = React.createElement(Tooltip, {\n        id: \"modal-tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"wow.\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"modal test\"), React.createElement(Button, {\n        bsStyle: \"primary\",\n        bsSize: \"large\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Launch demo modal\"), React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"fortitle\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"IS THIS SHOWING?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        overlay: popover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"popover\")), ' '))));\n    }\n  }]);\n\n  return test;\n}(Component);\n\nexport default test;","map":{"version":3,"sources":["C:\\Project127\\Project12.2018\\react_client\\src\\test.js"],"names":["React","Component","axios","ReactDOM","Modal","ModalHeader","ModalFooter","ModalBody","OverlayTrigger","Tooltip","Button","Popover","test","props","context","toggleOpen","setState","isOpen","state","getPosts","bind","handleShow","handleClose","posts","show","get","then","res","data","popover","tooltip"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,kCAAP;AACA,OAAO,gCAAP;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;IAMMC,I;;;;;AAGF,gBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,8EAAMD,KAAN,EAAaC,OAAb;;AADwB,UAD5BC,UAC4B,GADf;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAAtB,OAAd,CAAN;AAAA,KACe;;AAExB,UAAKE,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,uDAAnB;AAEA,UAAKF,KAAL,GAAa;AACXK,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AANwB;AAUzB;;;;kCAEY;AACX,WAAKR,QAAL,CAAc;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;iCACW;AACV,WAAKR,QAAL,CAAc;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;+BAGU;AAAA;;AACTtB,MAAAA,KAAK,CAACuB,GAAN,uCAAgDC,IAAhD,CAAqD,UAAAC,GAAG,EAAI;AAC1D,YAAMJ,KAAK,GAAGI,GAAG,CAACC,IAAlB;;AACA,QAAA,MAAI,CAACZ,QAAL,CAAc;AAAEO,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OAHD;AAID;;;6BACM;AACP,UAAMM,OAAO,GACb,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,eAAZ;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADA;AAIA,UAAMC,OAAO,GAAG,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAEE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,MAAM,EAAC,OAAjC;AAAyC,QAAA,OAAO,EAAE,KAAKT,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAKE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWM,IAAxB;AAA8B,QAAA,MAAM,EAAE,KAAKF,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAEO,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAGoB,GAHpB,CAFF,CAJF,CALF,CADF;AAqBH;;;;EAzDc5B,S;;AA4DnB,eAAeW,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { ModalHeader } from 'react-bootstrap';\r\nimport { ModalFooter } from 'react-bootstrap';\r\nimport { ModalBody } from 'react-bootstrap';\r\nimport { OverlayTrigger } from 'react-bootstrap';\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Popover } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\nclass test extends Component {\r\n\r\n    toggleOpen = () => this.setState({ isOpen: !this.state.isOpen });\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.getPosts = this.getPosts.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n          posts: [],\r\n          show: false\r\n        };\r\n      }\r\n\r\n      handleClose(){\r\n        this.setState({ show: false });\r\n      }\r\n      handleShow(){\r\n        this.setState({ show: true });\r\n      } \r\n\r\n\r\n      getPosts() {\r\n        axios.get(`http://localhost:3000/posts/public`).then(res => {\r\n          const posts = res.data;\r\n          this.setState({ posts });\r\n        });\r\n      }\r\n    render() {\r\n      const popover = (\r\n      <Popover id=\"modal-popover\" title=\"popover\">\r\n          very popover. such engagement\r\n      </Popover>);\r\n      const tooltip = <Tooltip id=\"modal-tooltip\">wow.</Tooltip>;\r\n\r\n        return (\r\n          <div>\r\n            <p>modal test</p>\r\n            <Button bsStyle=\"primary\" bsSize=\"large\" onClick={this.handleShow}>\r\n              Launch demo modal\r\n            </Button>\r\n            <Modal show={this.state.show} onHide={this.handleClose}>\r\n              <Modal.Header>\r\n                <Modal.Title>fortitle</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <h4>IS THIS SHOWING?</h4>\r\n                <p>\r\n                  <OverlayTrigger overlay={popover}>\r\n                    <a href=\"#popover\">popover</a>\r\n                  </OverlayTrigger>{' '}\r\n                </p>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default test;"]},"metadata":{},"sourceType":"module"}