{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport elementType from 'prop-types-extra/lib/elementType';\nimport { bsClass, prefix, splitBsProps } from './utils/bootstrapUtils';\nimport { DEVICE_SIZES } from './utils/StyleConfig';\nvar propTypes = {\n  componentClass: elementType,\n\n  /**\r\n   * The number of columns you wish to span\r\n   *\r\n   * for Extra small devices Phones (<768px)\r\n   *\r\n   * class-prefix `col-xs-`\r\n   */\n  xs: PropTypes.number,\n\n  /**\r\n   * The number of columns you wish to span\r\n   *\r\n   * for Small devices Tablets (≥768px)\r\n   *\r\n   * class-prefix `col-sm-`\r\n   */\n  sm: PropTypes.number,\n\n  /**\r\n   * The number of columns you wish to span\r\n   *\r\n   * for Medium devices Desktops (≥992px)\r\n   *\r\n   * class-prefix `col-md-`\r\n   */\n  md: PropTypes.number,\n\n  /**\r\n   * The number of columns you wish to span\r\n   *\r\n   * for Large devices Desktops (≥1200px)\r\n   *\r\n   * class-prefix `col-lg-`\r\n   */\n  lg: PropTypes.number,\n\n  /**\r\n   * Hide column\r\n   *\r\n   * on Extra small devices Phones\r\n   *\r\n   * adds class `hidden-xs`\r\n   */\n  xsHidden: PropTypes.bool,\n\n  /**\r\n   * Hide column\r\n   *\r\n   * on Small devices Tablets\r\n   *\r\n   * adds class `hidden-sm`\r\n   */\n  smHidden: PropTypes.bool,\n\n  /**\r\n   * Hide column\r\n   *\r\n   * on Medium devices Desktops\r\n   *\r\n   * adds class `hidden-md`\r\n   */\n  mdHidden: PropTypes.bool,\n\n  /**\r\n   * Hide column\r\n   *\r\n   * on Large devices Desktops\r\n   *\r\n   * adds class `hidden-lg`\r\n   */\n  lgHidden: PropTypes.bool,\n\n  /**\r\n   * Move columns to the right\r\n   *\r\n   * for Extra small devices Phones\r\n   *\r\n   * class-prefix `col-xs-offset-`\r\n   */\n  xsOffset: PropTypes.number,\n\n  /**\r\n   * Move columns to the right\r\n   *\r\n   * for Small devices Tablets\r\n   *\r\n   * class-prefix `col-sm-offset-`\r\n   */\n  smOffset: PropTypes.number,\n\n  /**\r\n   * Move columns to the right\r\n   *\r\n   * for Medium devices Desktops\r\n   *\r\n   * class-prefix `col-md-offset-`\r\n   */\n  mdOffset: PropTypes.number,\n\n  /**\r\n   * Move columns to the right\r\n   *\r\n   * for Large devices Desktops\r\n   *\r\n   * class-prefix `col-lg-offset-`\r\n   */\n  lgOffset: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the right\r\n   *\r\n   * for Extra small devices Phones\r\n   *\r\n   * class-prefix `col-xs-push-`\r\n   */\n  xsPush: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the right\r\n   *\r\n   * for Small devices Tablets\r\n   *\r\n   * class-prefix `col-sm-push-`\r\n   */\n  smPush: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the right\r\n   *\r\n   * for Medium devices Desktops\r\n   *\r\n   * class-prefix `col-md-push-`\r\n   */\n  mdPush: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the right\r\n   *\r\n   * for Large devices Desktops\r\n   *\r\n   * class-prefix `col-lg-push-`\r\n   */\n  lgPush: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the left\r\n   *\r\n   * for Extra small devices Phones\r\n   *\r\n   * class-prefix `col-xs-pull-`\r\n   */\n  xsPull: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the left\r\n   *\r\n   * for Small devices Tablets\r\n   *\r\n   * class-prefix `col-sm-pull-`\r\n   */\n  smPull: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the left\r\n   *\r\n   * for Medium devices Desktops\r\n   *\r\n   * class-prefix `col-md-pull-`\r\n   */\n  mdPull: PropTypes.number,\n\n  /**\r\n   * Change the order of grid columns to the left\r\n   *\r\n   * for Large devices Desktops\r\n   *\r\n   * class-prefix `col-lg-pull-`\r\n   */\n  lgPull: PropTypes.number\n};\nvar defaultProps = {\n  componentClass: 'div'\n};\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = [];\n    DEVICE_SIZES.forEach(function (size) {\n      function popProp(propSuffix, modifier) {\n        var propName = \"\" + size + propSuffix;\n        var propValue = elementProps[propName];\n\n        if (propValue != null) {\n          classes.push(prefix(bsProps, \"\" + size + modifier + \"-\" + propValue));\n        }\n\n        delete elementProps[propName];\n      }\n\n      popProp('', '');\n      popProp('Offset', '-offset');\n      popProp('Push', '-push');\n      popProp('Pull', '-pull');\n      var hiddenPropName = size + \"Hidden\";\n\n      if (elementProps[hiddenPropName]) {\n        classes.push(\"hidden-\" + size);\n      }\n\n      delete elementProps[hiddenPropName];\n    });\n    return React.createElement(Component, _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default bsClass('col', Col);","map":null,"metadata":{},"sourceType":"module"}