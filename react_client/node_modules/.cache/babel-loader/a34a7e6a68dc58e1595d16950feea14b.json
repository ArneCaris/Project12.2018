{"ast":null,"code":"import _classCallCheck from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Project127\\\\Project12.2018\\\\react_client\\\\src\\\\test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nvar test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(test, _Component);\n\n  function test() {\n    var _this;\n\n    _classCallCheck(this, test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(test).call(this));\n    _this.state = {\n      isOpen: false\n    };\n\n    _this.toggleOpen = function () {\n      return _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.getPosts = _this.getPosts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(test, [{\n    key: \"handleModal\",\n    value: function handleModal() {\n      this.state = {\n        modalIsOpen: false\n      };\n      this.openModal = this.openModal.bind(this);\n      this.afterOpenModal = this.afterOpenModal.bind(this);\n      this.closeModal = this.closeModal.bind(this);\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        modalIsOpen: true\n      });\n    }\n  }, {\n    key: \"getPosts\",\n    value: function getPosts() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (res) {\n        var posts = res.data;\n\n        _this2.setState({\n          posts: posts\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var menuClass = \"dropdown-menu\".concat(this.state.isOpen ? \"show\" : \"\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.getPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"reload for posts\"), React.createElement(\"div\", {\n        className: \"for-posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.posts.map(function (Post) {\n        return React.createElement(\"div\", {\n          className: \"post-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, Post.Title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, Post.Content), React.createElement(\"div\", {\n          className: \"dropdown-post\",\n          onClick: _this3.toggleOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-secondary dropdown-toggle\",\n          type: \"button\",\n          id: \"dropdownMenuButton\",\n          \"data-toggle\": \"dropdown-post\",\n          \"aria-haspopup\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"...\"), React.createElement(\"div\", {\n          className: menuClass,\n          \"aria-labelledby\": \"dropdownMenuButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#nogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Update\"), React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#nogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Share\"), React.createElement(\"a\", {\n          className: \"dropdown-item\",\n          onClick: _this3.openModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Delete\"))));\n      })));\n    }\n  }]);\n\n  return test;\n}(Component);\n\nexport default test;","map":{"version":3,"sources":["C:\\Project127\\Project12.2018\\react_client\\src\\test.js"],"names":["React","Component","axios","ReactDOM","Modal","test","state","isOpen","toggleOpen","setState","getPosts","bind","posts","modalIsOpen","openModal","afterOpenModal","closeModal","get","then","res","data","menuClass","map","Post","Title","Content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\n\r\nclass test extends Component {\r\n    state = {\r\n        isOpen: false\r\n      };\r\n    toggleOpen = () => this.setState({ isOpen: !this.state.isOpen });\r\n    constructor() {\r\n        super();\r\n        this.getPosts = this.getPosts.bind(this);\r\n        this.state = {\r\n          posts: []\r\n        };\r\n      }\r\n\r\n      handleModal(){\r\n        this.state = {\r\n          modalIsOpen: false\r\n      };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n      }\r\n\r\n      openModal() {\r\n        this.setState({modalIsOpen: true});\r\n      }\r\n\r\n      getPosts() {\r\n        axios.get(`http://localhost:3000/posts/public`).then(res => {\r\n          const posts = res.data;\r\n          this.setState({ posts });\r\n        });\r\n      }\r\n    render() {\r\n        const menuClass = `dropdown-menu${this.state.isOpen ? \"show\" : \"\"}`;\r\n        return (\r\n          <div>\r\n          <button className=\"button\" onClick={this.getPosts}>\r\n            reload for posts\r\n          </button>\r\n            <div className=\"for-posts\">\r\n              {this.state.posts.map(Post =>(\r\n            <div className=\"post-div\">\r\n              <h4>{Post.Title}</h4>\r\n              <p>{Post.Content}</p>\r\n              <div className=\"dropdown-post\" onClick={this.toggleOpen}>\r\n                <button\r\n                    className=\"btn btn-secondary dropdown-toggle\" \r\n                    type=\"button\" \r\n                    id=\"dropdownMenuButton\" \r\n                    data-toggle=\"dropdown-post\" \r\n                    aria-haspopup=\"true\">\r\n                   ...\r\n                </button>\r\n                <div className={menuClass} aria-labelledby=\"dropdownMenuButton\">\r\n                    <a className=\"dropdown-item\" href=\"#nogo\">Update</a>\r\n                    <a className=\"dropdown-item\" href=\"#nogo\">Share</a>\r\n                    <a className=\"dropdown-item\" onClick={this.openModal}>Delete</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            ))}\r\n            </div>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default test;"]},"metadata":{},"sourceType":"module"}