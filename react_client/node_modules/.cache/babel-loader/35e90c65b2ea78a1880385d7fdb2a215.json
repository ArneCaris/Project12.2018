{"ast":null,"code":"import _classCallCheck from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\OAMK\\\\Projects\\\\Fall_Winter_2018\\\\Project12.2018\\\\react_client\\\\src\\\\Components\\\\CommentsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentsList, _Component);\n\n  function CommentsList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentsList).call(this, props));\n    _this.state = {\n      comments: [],\n      ID: '',\n      UserID: '',\n      PostID: '',\n      Message: '',\n      LastEdit: '',\n      username: ''\n    };\n    return _this;\n  }\n\n  _createClass(CommentsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var currPostId = sessionStorage.getItem(\"PostID\");\n      axios.get(\"http://localhost:3000/comments/\" + currPostId).then(function (results) {\n        var comments = results.data;\n        var ID = [];\n        var UserID = [];\n        var PostID = [];\n        var Message = [];\n        var LastEdit = [];\n        var username = [];\n\n        for (var x = 0; x < comments.length; x++) {\n          ID.push(comments[x].ID);\n          UserID.push(comments[x].UserID);\n          PostID.push(comments[x].PostID);\n          Message.push(comments[x].Message);\n          LastEdit.push(comments[x].LastEdit);\n        }\n\n        axios.get('http://localhost:3000/Users/').then(function (results) {\n          var users = results.data;\n\n          for (var y = 0; y < users.length; y++) {\n            username[users[y].ID] = users[y].username;\n          }\n        });\n\n        _this2.setState({\n          comments: comments,\n          ID: ID,\n          UserID: UserID,\n          PostID: PostID,\n          Message: Message,\n          LastEdit: LastEdit,\n          username: username\n        });\n      });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      if (this.state.PostID !== sessionStorage.getItem('PostID')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var commentsList = this.state.comments.map(function (comment) {\n        var commentUser = comment.UserID;\n        var Messagestring = comment.Message;\n        var username = _this3.state.username[commentUser];\n        return React.createElement(\"div\", {\n          className: \"for-posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"commentdiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"commentDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Moment, {\n          format: \"DD-MM-YYYY\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, comment.LastEdit))), React.createElement(\"ul\", {\n          id: comment.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"ID: \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, comment.ID), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, username), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, Messagestring), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, commentsList);\n    }\n  }]);\n\n  return CommentsList;\n}(Component);\n\nexport default CommentsList;","map":{"version":3,"sources":["C:\\OAMK\\Projects\\Fall_Winter_2018\\Project12.2018\\react_client\\src\\Components\\CommentsList.js"],"names":["React","Component","axios","Moment","CommentsList","props","state","comments","ID","UserID","PostID","Message","LastEdit","username","currPostId","sessionStorage","getItem","get","then","results","data","x","length","push","users","y","setState","commentsList","map","comment","commentUser","Messagestring"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass CommentsList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            comments: [],\r\n            ID: '',\r\n            UserID: '',\r\n            PostID: '',\r\n            Message: '',\r\n            LastEdit: '',\r\n            username: ''\r\n        }; \r\n    }\r\n\r\n    componentDidMount(){\r\n        const currPostId = sessionStorage.getItem(\"PostID\")\r\n\r\n        axios.get(`http://localhost:3000/comments/`+currPostId).then(results => {\r\n          const comments = results.data;\r\n          const ID = [];\r\n          const UserID = [];\r\n          const PostID = [];\r\n          const Message = [];\r\n          const LastEdit = [];\r\n          const username = [];\r\n          for (var x = 0; x < comments.length; x++) {\r\n              ID.push(comments[x].ID);\r\n              UserID.push(comments[x].UserID);\r\n              PostID.push(comments[x].PostID);\r\n              Message.push(comments[x].Message);\r\n              LastEdit.push(comments[x].LastEdit);\r\n            }\r\n            axios.get('http://localhost:3000/Users/').then(results => {\r\n                const users = results.data;\r\n\r\n                for ( var y = 0; y < users.length; y++){\r\n                username[users[y].ID] = users[y].username;\r\n                } \r\n            });\r\n            this.setState({ \r\n            comments,\r\n            ID,\r\n            UserID,\r\n            PostID,\r\n            Message,\r\n            LastEdit,\r\n            username\r\n           });\r\n        });\r\n    }\r\n\r\n    \r\n    shouldComponentUpdate() {\r\n        if(this.state.PostID !== sessionStorage.getItem('PostID') ){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        let commentsList = this.state.comments.map ( comment => {\r\n        const commentUser = comment.UserID;\r\n        const Messagestring = comment.Message;\r\n            \r\n        const username =  this.state.username[commentUser];\r\n        \r\n        return (\r\n            <div className=\"for-posts\">\r\n            <div className=\"commentdiv\">\r\n                <div className=\"commentDate\">\r\n                    <Moment format={\"DD-MM-YYYY\"}>\r\n                        <li>{comment.LastEdit}</li>\r\n                    </Moment>\r\n                </div>\r\n                <ul id={comment.ID} >\r\n                ID: <i>{comment.ID}</i>\r\n                <h5>{username}</h5>\r\n                <p>{Messagestring}</p>\r\n                \r\n                <br/>\r\n                </ul>\r\n            </div>\r\n            </div>)\r\n            });\r\n        return (\r\n            <div>\r\n                {commentsList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n        \r\nexport default CommentsList;"]},"metadata":{},"sourceType":"module"}