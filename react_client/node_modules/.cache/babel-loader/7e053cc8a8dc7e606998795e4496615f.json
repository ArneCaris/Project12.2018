{"ast":null,"code":"import _defineProperty from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Project12.2018\\\\react_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Project12.2018\\\\react_client\\\\src\\\\test.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\nimport { Route, Link } from 'react-router-dom';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport NavigationButton from './Components/NavigationButton';\nimport CommentField from './Components/CommentField';\nimport PostModal from './Components/PostModal';\nimport RemoveButton from './Components/RemoveButton';\nimport moment from 'react-moment';\nimport 'moment-timezone';\nimport Moment from 'react-moment';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this, props));\n\n    _this.handleModal = function (e) {\n      var search = e.target.id;\n      console.log(search);\n      var idlist = [];\n\n      for (var x = 0; x < _this.state.posts.length; x++) {\n        idlist.push(_this.state.posts[x].ID);\n\n        _this.setState({\n          modal: !_this.state.modal\n        });\n\n        _this.forlooptitle(idlist, search);\n      }\n    };\n\n    _this.state = {\n      posts: [],\n      ID: '',\n      Title: '',\n      Content: '',\n      LastEdit: '',\n      titletext: '',\n      titlecontent: '',\n      modal: false\n    };\n    _this.handleModal = _this.handleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.forlooptitle = _this.forlooptitle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:3000/posts/public\").then(function (results) {\n        var posts = results.data;\n        var ID = [];\n        var Title = [];\n        var Content = [];\n        var LastEdit = [];\n\n        for (var x = 0; x < posts.length; x++) {\n          ID.push(posts[x].ID);\n          Title.push(posts[x].Title);\n          Content.push(posts[x].Content);\n          LastEdit.push(posts[x].LastEdit);\n        }\n\n        _this2.setState({\n          posts: posts,\n          ID: ID,\n          Title: Title,\n          Content: Content,\n          LastEdit: LastEdit\n        });\n      });\n    }\n  }, {\n    key: \"forlooptitle\",\n    value: function forlooptitle(idlist, search) {\n      console.log(search);\n      console.log(idlist);\n      var anotherarray = {};\n\n      for (var x = 0; x < this.state.posts.length; x++) {\n        if (idlist.includes(this.state.posts[x].ID)) {\n          anotherarray[this.state.posts[x].ID] = {\n            id: this.state.posts[x].ID,\n            title: this.state.posts[x].Title,\n            content: this.state.posts[x].Content\n          };\n\n          if (this.state.posts[x].ID == document.getElementById(search).id) {\n            this.setState({\n              titletext: anotherarray[this.state.posts[x].ID].title,\n              titlecontent: anotherarray[this.state.posts[x].ID].content\n            });\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"deletePost\",\n    value: function () {\n      var _deletePost = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(Post) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.confirm(\"Do you wish to delete \\\"\".concat(this.state.posts.Title, \"\\\"\"))) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return axios.delete(\"http//localhost:3000/posts/\".concat(Post.ID));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function deletePost(_x) {\n        return _deletePost.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _React$createElement;\n\n      var postsList = this.state.posts.map(function (Post) {\n        return React.createElement(\"div\", {\n          className: \"for-posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"postdiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          onClick: _this3.handleModal,\n          id: Post.ID,\n          className: Post.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"ID: \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, Post.ID)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, Post.Title)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, Post.Content)), React.createElement(Badge, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, Post.Category), React.createElement(Moment, {\n          format: \"DD-MM-YYYY\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, Post.LastEdit))), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.deletePost(Post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"del\")));\n      });\n      var modaltitle = React.createElement(\"div\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.titletext);\n      var modalcontent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.state.titlecontent);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, postsList), React.createElement(Modal, (_React$createElement = {\n        key: this.props.ID,\n        isOpen: this.state.modal\n      }, _defineProperty(_React$createElement, \"key\", this.state.posts.ID), _defineProperty(_React$createElement, \"className\", \"modalpost\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, modaltitle), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, modalcontent), React.createElement(CommentField, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport default Test;","map":{"version":3,"sources":["C:\\Project12.2018\\react_client\\src\\test.js"],"names":["React","Component","axios","ReactDOM","Button","Modal","ModalHeader","ModalBody","ModalFooter","Badge","Route","Link","toast","ToastContainer","NavigationButton","CommentField","PostModal","RemoveButton","moment","Moment","Test","props","handleModal","e","search","target","id","console","log","idlist","x","state","posts","length","push","ID","setState","modal","forlooptitle","Title","Content","LastEdit","titletext","titlecontent","bind","handleClose","get","then","results","data","anotherarray","includes","title","content","document","getElementById","Post","window","confirm","delete","postsList","map","Category","deletePost","modaltitle","modalcontent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NavigationButton from './Components/NavigationButton';\r\nimport CommentField from './Components/CommentField';\r\nimport PostModal from './Components/PostModal';\r\nimport RemoveButton from './Components/RemoveButton';\r\nimport moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport Moment from 'react-moment';\r\n\r\nclass Test extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      ID: '',\r\n      Title: '',\r\n      Content: '',\r\n      LastEdit: '',\r\n      titletext: '',\r\n      titlecontent: '',\r\n      modal: false\r\n    };\r\n    this.handleModal = this.handleModal.bind(this);\r\n    this.forlooptitle = this.forlooptitle.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:3000/posts/public`).then(results => {\r\n      const posts = results.data;\r\n      const ID = [];\r\n      const Title = [];\r\n      const Content = [];\r\n      const LastEdit = [];\r\n      for (var x = 0; x < posts.length; x++) {\r\n        ID.push(posts[x].ID);\r\n        Title.push(posts[x].Title);\r\n        Content.push(posts[x].Content);\r\n        LastEdit.push(posts[x].LastEdit)\r\n      }\r\n      this.setState({ \r\n        posts,\r\n        ID,\r\n        Title,\r\n        Content,\r\n        LastEdit\r\n       });\r\n    });\r\n  }\r\n\r\n  forlooptitle (idlist, search) {\r\n      console.log(search)\r\n      console.log(idlist)\r\n      var anotherarray = {};\r\n      for (var x = 0; x < this.state.posts.length; x++) {\r\n          if (idlist.includes(this.state.posts[x].ID)) {\r\n            anotherarray[this.state.posts[x].ID]= {id: this.state.posts[x].ID, title: this.state.posts[x].Title, content: this.state.posts[x].Content}\r\n            if (this.state.posts[x].ID == document.getElementById(search).id)  {\r\n              this.setState({\r\n                titletext: anotherarray[this.state.posts[x].ID].title,\r\n                titlecontent: anotherarray[this.state.posts[x].ID].content\r\n              });\r\n              break\r\n              \r\n            }               \r\n          }\r\n          else {\r\n            break\r\n          }\r\n          \r\n      }  \r\n  }\r\n\r\n  handleModal = e => {\r\n    const search = e.target.id;\r\n    console.log(search)\r\n    var idlist = []\r\n    for (var x = 0; x < this.state.posts.length; x++) {\r\n\r\n      idlist.push(this.state.posts[x].ID);\r\n\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n     });  \r\n    this.forlooptitle(idlist, search);\r\n    }\r\n}\r\n\r\nhandleClose() {\r\n  this.setState({\r\n    modal: !this.state.modal,\r\n});\r\n}\r\n\r\nasync deletePost(Post) {\r\n  if(window.confirm(`Do you wish to delete \"${this.state.posts.Title}\"`)) {\r\n    await axios.delete(`http//localhost:3000/posts/${Post.ID}`);\r\n  }\r\n}\r\n\r\n\r\nrender() {\r\n  let postsList = this.state.posts.map ( Post => {\r\n    return (\r\n    <div className=\"for-posts\">\r\n    <div className=\"postdiv\">\r\n      <ul onClick={this.handleModal} id={Post.ID} className={Post.ID}>\r\n        <li>ID: <i>{Post.ID}</i></li>\r\n        <li><h3>{Post.Title}</h3></li>\r\n        <li><p>{Post.Content}</p></li>\r\n        <Badge>{Post.Category}</Badge>\r\n        <Moment format={\"DD-MM-YYYY\"}>\r\n          <li>{Post.LastEdit}</li>\r\n        </Moment>\r\n      </ul>\r\n      <button onClick={() => this.deletePost(Post)}>del</button>\r\n    </div>\r\n    </div>)\r\n  });\r\n      var modaltitle =\r\n        <div id=\"title\">\r\n          \r\n          {this.state.titletext}\r\n        \r\n        </div>\r\n        ;\r\n      var modalcontent =\r\n        <div>\r\n          \r\n          {this.state.titlecontent}\r\n        \r\n        </div>\r\n        ;\r\n\r\n    return(\r\n      <div>\r\n        <div>\r\n          {postsList}\r\n        </div>\r\n        \r\n        <Modal key={this.props.ID} isOpen={this.state.modal} key={this.state.posts.ID} className=\"modalpost\">\r\n          \r\n            <ModalHeader>{modaltitle}</ModalHeader>\r\n            <ModalBody>\r\n              {modalcontent}\r\n            </ModalBody>\r\n            \r\n              <CommentField/>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={this.handleClose}>Close</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}